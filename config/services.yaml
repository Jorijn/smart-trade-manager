parameters:

services:
  # COMMAND CONFIGURATION
  app.command.evaluate_positions_force:
    class: App\Command\EvaluatePositionsForceCommand
    arguments:
      - "app:evaluate-positions:force"
      - "@command.bus"
      - "@cache.app"
    tags:
      - { name: console.command }

  app.command.synchronize_symbol_list:
    class: App\Command\SynchronizeSymbolListCommand
    arguments:
      - "app:exchange:synchronize-symbol-list"
      - "@query.bus"
      - "@doctrine.orm.entity_manager"
    tags:
      - { name: console.command }

  app.command.user_stream_process:
    class: App\Command\UserStreamProcessCommand
    arguments:
      - "app:user-stream:process"
      - "@binance_api.client"
      - "@property_accessor"
      - "@event.bus"
      - "@command.bus"
      - "@logger"
    tags:
      - { name: console.command }

  app.command.test:
    class: App\Command\TestCommand
    arguments:
      - "app:test"
      - "@doctrine.orm.entity_manager"
      - "@query.bus"
      - "@command.bus"
      - "@form.factory"
    tags:
      - { name: console.command }

  # COMMANDBUS CONFIGURATION
  app.bus.message_handler.command.create_exchange_orders:
    class: App\Bus\MessageHandler\Command\CreateExchangeOrdersHandler
    arguments:
      - "@binance_api.client"
      - "@logger"
      - "@doctrine.orm.entity_manager"
      - "@event_dispatcher"
    tags:
      - {
          name: messenger.message_handler,
          bus: command.bus,
          handles: App\Bus\Message\Command\CreateExchangeOrdersCommand,
        }

  app.bus.message_handler.command.evaluate_positions:
    class: App\Bus\MessageHandler\Command\EvaluatePositionsHandler
    arguments:
      - "@cache.app"
      - "@logger"
      - "@doctrine.orm.default_entity_manager"
      - "@app.component.exchange_price_formatter"
      - "@binance_api.client"
      - "@query.bus"
      - "@command.bus"
    tags:
      - {
          name: messenger.message_handler,
          bus: command.bus,
          handles: App\Bus\Message\Command\EvaluatePositionsCommand,
        }

  app.bus.message_handler.command.synchronize_order_history:
    class: App\Bus\MessageHandler\Command\SynchronizeOrderHistoryHandler
    arguments:
      - "@logger"
      - "@doctrine.orm.default_entity_manager"
      - "@binance_api.client"
      - "@event_dispatcher"
    tags:
      - {
          name: messenger.message_handler,
          bus: command.bus,
          handles: App\Bus\Message\Command\SynchronizeOrderHistoryCommand,
        }

  app.bus.message_handler.query.buy_orders:
    class: App\Bus\MessageHandler\Query\OrderQueryHandler
    arguments:
      - "@doctrine.orm.entity_manager"
      - !tagged app.order_generator.buy
      - "@logger"
    tags:
      - {
          name: messenger.message_handler,
          bus: query.bus,
          handles: App\Bus\Message\Query\BuyOrderQuery,
        }

  app.bus.message_handler.query.sell_orders:
    class: App\Bus\MessageHandler\Query\OrderQueryHandler
    arguments:
      - "@doctrine.orm.entity_manager"
      - !tagged app.order_generator.sell
      - "@logger"
    tags:
      - {
          name: messenger.message_handler,
          bus: query.bus,
          handles: App\Bus\Message\Query\SellOrderQuery,
        }

  app.bus.message_handler.event.websocket:
    class: App\Bus\MessageHandler\Event\WebsocketEventHandler
    arguments:
      - !tagged app.websocket_event.handler
    tags:
      - {
          name: messenger.message_handler,
          bus: event.bus,
          handles: App\Bus\Message\Event\WebsocketEvent,
        }

  app.bus.message_handler.event.websocket.outbound_account_position:
    class: App\Bus\MessageHandler\Event\Websocket\OutboundAccountPositionEventHandler
    tags:
      - app.websocket_event.handler

  app.bus.message_handler.event.websocket.execution_report:
    class: App\Bus\MessageHandler\Event\Websocket\ExecutionReportEventHandler
    arguments:
      - "@doctrine.orm.entity_manager"
      - "@event_dispatcher"
    tags:
      - app.websocket_event.handler

  # CONTROLLER CONFIGURATION
  App\Controller\:
    resource: "../src/Controller"
    tags: ["controller.service_arguments"]

  # DECORATOR CONFIGURATION
  app.decorator.api_credentials_http_client:
    class: App\Decorator\ApiCredentialsHttpClientDecorator
    decorates: binance_api.client
    decoration_priority: 5
    arguments:
      - "@app.decorator.api_credentials_http_client.inner"
      - "%app.config.exchange.api_key%"
      - "%app.config.exchange.api_secret%"

  app.decorator.verbose_http_client:
    class: App\Decorator\VerboseHttpClientDecorator
    decorates: binance_api.client
    decoration_priority: 10
    arguments:
      - "@app.decorator.verbose_http_client.inner"
      - "%app.config.exchange.api_debugging_enabled%"

  # ORDER GENERATOR CONFIGURATION
  app.order_generator.abstract:
    class: App\OrderGenerator\AbstractOrderGenerator
    abstract: true
    arguments:
      - "@app.component.exchange_price_formatter"
      - "@doctrine.orm.entity_manager"
    calls:
      - [setLogger, ["@logger"]]

  app.order_generator.limit_ladder_buy:
    class: App\OrderGenerator\LimitLadderBuyOrderGenerator
    parent: app.order_generator.abstract
    arguments:
      - "%app.config.exchange.ladder_size%"
    tags:
      - { name: "app.order_generator.buy", priority: 100 }

  app.order_generator.limit_buy:
    class: App\OrderGenerator\LimitBuyOrderGenerator
    parent: app.order_generator.abstract
    autowire: false
    tags:
      - { name: "app.order_generator.buy", priority: 0 }

  app.order_generator.oco_sell:
    class: App\OrderGenerator\OcoSellOrderGenerator
    parent: app.order_generator.abstract
    tags:
      - { name: "app.order_generator.sell", priority: 100 }

  app.order_generator.stop_limit_loss:
    class: App\OrderGenerator\StopLimitLossOrderGenerator
    parent: app.order_generator.abstract
    tags:
      - { name: "app.order_generator.sell", priority: 50 }

  app.order_generator.take_profit_sell:
    class: App\OrderGenerator\TakeProfitSellOrderGenerator
    parent: app.order_generator.abstract
    tags:
      - { name: "app.order_generator.sell", priority: 50 }

  # EVENT LISTENER CONFIGURATION
  app.event_listener.order_changed:
    class: App\EventListener\OrderChangedEventListener
    arguments:
      - "@command.bus"
      - "@cache.app"
      - "@logger"
    tags:
      - {
          name: kernel.event_listener,
          event: App\Event\OrderUpdatedEvent,
          method: "onOrderChanged",
        }
      - {
          name: kernel.event_listener,
          event: App\Event\OrderCreatedEvent,
          method: "onOrderChanged",
        }

  app.component.exchange_price_formatter:
    class: App\Component\ExchangePriceFormatter
    arguments:
      - "@logger"

  # FORM TYPE CONFIGURATION
  app.form.type.trade:
    class: App\Form\Type\TradeType
    arguments:
      - "@doctrine.orm.default_entity_manager"
    tags:
      - { name: form.type }

  app.form.type.take_profit:
    class: App\Form\Type\TakeProfitType
    tags:
      - { name: form.type }
